import 'package:flutter/material.dart';
import 'package:sevaexchange/constants/sevatitles.dart';
import 'package:sevaexchange/l10n/l10n.dart';
import 'package:sevaexchange/models/request_model.dart';
import 'package:sevaexchange/ui/screens/search/widgets/network_image.dart';
import 'package:sevaexchange/ui/utils/date_formatter.dart';

class TimebankRequestCard extends StatelessWidget {
  final bool isRecurring;
  final String title;
  final String subtitle;
  final String photoUrl;
  final int startTime;
  final int endTime;
  final bool isApplied;
  final RequestType requestType;
  final bool autoGenerated;

  const TimebankRequestCard({
    Key key,
    this.requestType,
    this.autoGenerated,
    this.isRecurring,
    this.title,
    this.subtitle,
    this.photoUrl,
    this.isApplied = false,
    this.startTime,
    this.endTime,
  }) : super(key: key);
  @override
  Widget build(BuildContext context) {
    return Container(
      margin: EdgeInsets.symmetric(horizontal: 5, vertical: 0),
      child: Card(
        color: Colors.white,
        elevation: 2,
        child: Row(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: <Widget>[
            Padding(
              padding: const EdgeInsets.fromLTRB(8, 8, 12, 8),
              child: ClipOval(
                child: SizedBox(
                  height: 45,
                  width: 45,
                  child: CustomNetworkImage(photoUrl ?? defaultUserImageURL),
                ),
              ),
            ),
            Expanded(
              child: Padding(
                padding: const EdgeInsets.symmetric(vertical: 8),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: <Widget>[
                    getAppropriateTag(requestType, context),
                    Row(
                      children: [
                        Text(
                          title,
                          overflow: TextOverflow.ellipsis,
                          maxLines: 1,
                          style: TextStyle(
                              fontSize: 16,
                              fontWeight: FontWeight.w500,
                              color: Colors.black87),
                        ),
                        Visibility(
                          visible: isRecurring,
                          child: Padding(
                            padding: const EdgeInsets.only(left: 140),
                            child: Icon(
                              Icons.navigate_next,
                              size: 20,
                            ),
                          ),
                        ),
                      ],
                    ),
                    Text(
                      subtitle,
                      maxLines: 1,
                      overflow: TextOverflow.ellipsis,
                      style: Theme.of(context).textTheme.subtitle,
                    ),
                    SizedBox(height: 8),
                    Visibility(
                      visible: !isRecurring,
                      child: Wrap(
                        crossAxisAlignment: WrapCrossAlignment.center,
                        children: <Widget>[
                          Text(
                              getTimeFormattedString(
                                  startTime, S.of(context).localeName),
                              style: TextStyle(
                                  fontSize: 14,
                                  fontWeight: FontWeight.w500,
                                  color: Colors.black54)),
                          SizedBox(width: 2),
                          Icon(Icons.arrow_forward, size: 14),
                          SizedBox(width: 4),
                          Text(
                              getTimeFormattedString(
                                endTime,
                                S.of(context).localeName,
                              ),
                              style: TextStyle(
                                  fontSize: 14,
                                  fontWeight: FontWeight.w500,
                                  color: Colors.black54)),
                        ],
                      ),
                    ),
                    Visibility(
                      visible: isRecurring,
                      child: Wrap(
                        crossAxisAlignment: WrapCrossAlignment.center,
                        children: <Widget>[
                          Text(
                            S.of(context).recurring,
                            style: TextStyle(
                                fontSize: 16.0,
                                color: Theme.of(context).primaryColor,
                                fontWeight: FontWeight.bold),
                          ),
                        ],
                      ),
                    ),
                    Row(
                      mainAxisAlignment: MainAxisAlignment.end,
                      mainAxisSize: MainAxisSize.max,
                      children: <Widget>[
                        isApplied && !isRecurring
                            ? Container(
                                margin: EdgeInsets.only(top: 10, bottom: 10),
                                width: 100,
                                height: 32,
                                child: FlatButton(
                                  shape: RoundedRectangleBorder(
                                    borderRadius: BorderRadius.circular(20),
                                  ),
                                  padding: EdgeInsets.all(0),
                                  color: Colors.green,
                                  child: Text(
                                    S.of(context).applied,
                                    style: TextStyle(
                                      color: Colors.white,
                                    ),
                                  ),
                                  onPressed: () {},
                                ),
                              )
                            : Container(),
                      ],
                    ),
                  ],
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget getAppropriateTag(RequestType requestType, BuildContext context) {
    switch (requestType) {
      case RequestType.CASH:
        return getTagMainFrame(S.of(context).cash_request, context);

      case RequestType.GOODS:
        return getTagMainFrame(S.of(context).goods_request, context);

      case RequestType.TIME:
        return getTagMainFrame(S.of(context).time_request, context);

      case RequestType.ONE_TO_MANY_REQUEST:
        return getTagMainFrame('One To Many Request', context);        // Label to be created

      default:
        return Container();
    }
  }
}

Widget getTagMainFrame(String tagTitle, BuildContext context) {
  return Container(
    margin: EdgeInsets.only(bottom: 3, right: 5, top: 5),
    child: ClipRRect(
      borderRadius: BorderRadius.all(Radius.circular(5)),
      child: Container(
        color: Theme.of(context).primaryColor,
        child: Padding(
          padding:
              const EdgeInsets.only(left: 10, right: 10, top: 3, bottom: 3),
          child: Text(
            tagTitle,
            style: TextStyle(
              fontSize: 11,
              color: Colors.white,
            ),
          ),
        ),
      ),
    ),
  );
}
